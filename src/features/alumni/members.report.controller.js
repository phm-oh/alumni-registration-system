// Path: src/features/alumni/members.report.controller.js
// ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà: members.report.controller.js - ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

import { getAllAlumni } from './alumni.service.js';
import * as XLSX from 'xlsx';

// ===============================================
// üìä COMPLETE MEMBERS REPORT CONTROLLERS
// ===============================================

/**
 * ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏™‡πà‡∏á)
 * GET /api/alumni/reports/all-members
 */
export const getAllMembersReportController = async (req, res) => {
  try {
    const {
      status = '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥', // Default: ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
      position,
      graduationYear,
      department,
      search,
      name,
      idCard,
      deliveryOption, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
      includeStatistics = 'true'
    } = req.query;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á filters ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const filters = {};
    if (status) filters.status = status;
    if (position) filters.position = position;
    if (graduationYear) filters.graduationYear = parseInt(graduationYear);
    if (department) filters.department = department;
    if (deliveryOption) filters.deliveryOption = deliveryOption;
    
    const searchTerm = search || name;
    if (searchTerm && searchTerm.trim()) {
      filters.name = searchTerm.trim();
    }
    
    if (idCard && idCard.trim()) {
      filters.idCard = idCard.trim();
    }

    const options = {
      page: 1,
      limit: 10000, // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      sort: { createdAt: -1 }
    };

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const results = await getAllAlumni(filters, options);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    let statistics = null;
    if (includeStatistics === 'true') {
      statistics = await generateAllMembersStatistics(results.data);
    }

    // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
    const membersByDelivery = separateMembersByDelivery(results.data);

    return res.status(200).json({
      success: true,
      message: '‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      data: {
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        allMembers: results.data,
        totalMembers: results.data.length,
        
        // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
        byDeliveryType: membersByDelivery,
        
        // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°
        statistics,
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
        filters: {
          status,
          position,
          graduationYear,
          department,
          deliveryOption,
          searchTerm
        },
        
        // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
        generatedAt: new Date()
      }
    });
  } catch (error) {
    console.error('Error in getAllMembersReport:', error);
    return res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      error: error.message
    });
  }
};

/**
 * Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô Excel
 * GET /api/alumni/export/all-members-excel
 */
export const exportAllMembersToExcelController = async (req, res) => {
  try {
    const {
      status = '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
      position,
      graduationYear,
      department,
      search,
      name,
      idCard,
      deliveryOption,
      fileName
    } = req.query;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á filters ‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö report
    const filters = {};
    if (status) filters.status = status;
    if (position) filters.position = position;
    if (graduationYear) filters.graduationYear = parseInt(graduationYear);
    if (department) filters.department = department;
    if (deliveryOption) filters.deliveryOption = deliveryOption;
    
    const searchTerm = search || name;
    if (searchTerm && searchTerm.trim()) {
      filters.name = searchTerm.trim();
    }
    
    if (idCard && idCard.trim()) {
      filters.idCard = idCard.trim();
    }

    const options = {
      page: 1,
      limit: 10000,
      sort: { createdAt: -1 }
    };

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const results = await getAllAlumni(filters, options);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Excel Workbook
    const workbook = XLSX.utils.book_new();

    // Sheet 1: ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const allMembersSheet = createAllMembersSheet(results.data);
    XLSX.utils.book_append_sheet(workbook, allMembersSheet, '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');

    // Sheet 2: ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
    const deliveryBreakdownSheet = createDeliveryBreakdownSheet(results.data);
    XLSX.utils.book_append_sheet(workbook, deliveryBreakdownSheet, '‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö');

    // Sheet 3: ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    const membersStatisticsSheet = await createMembersStatisticsSheet(results.data);
    XLSX.utils.book_append_sheet(workbook, membersStatisticsSheet, '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å');

    // Sheet 4: ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô
    const financialSummarySheet = createFinancialSummarySheet(results.data);
    XLSX.utils.book_append_sheet(workbook, financialSummarySheet, '‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel
    const excelBuffer = XLSX.write(workbook, { 
      type: 'buffer', 
      bookType: 'xlsx' 
    });

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    const defaultFileName = `all-members-report-${new Date().toISOString().split('T')[0]}.xlsx`;
    const downloadFileName = fileName || defaultFileName;

    // ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏±‡∏ö
    res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    res.setHeader('Content-Disposition', `attachment; filename="${downloadFileName}"`);
    res.setHeader('Content-Length', excelBuffer.length);

    return res.send(excelBuffer);

  } catch (error) {
    console.error('Error in exportAllMembersToExcel:', error);
    return res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      error: error.message
    });
  }
};

// ===============================================
// üîß HELPER FUNCTIONS
// ===============================================

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
const generateAllMembersStatistics = async (membersData) => {
  const total = membersData.length;
  
  // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
  const deliveryStats = membersData.reduce((acc, member) => {
    acc[member.deliveryOption] = (acc[member.deliveryOption] || 0) + 1;
    return acc;
  }, {});

  // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
  const departmentStats = membersData.reduce((acc, member) => {
    acc[member.department] = (acc[member.department] || 0) + 1;
    return acc;
  }, {});

  // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏µ
  const yearStats = membersData.reduce((acc, member) => {
    acc[member.graduationYear] = (acc[member.graduationYear] || 0) + 1;
    return acc;
  }, {});

  // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  const positionStats = membersData.reduce((acc, member) => {
    acc[member.position] = (acc[member.position] || 0) + 1;
    return acc;
  }, {});

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô
  const financials = {
    totalRevenue: membersData.reduce((sum, m) => sum + (m.totalAmount || 0), 0),
    membershipFees: membersData.reduce((sum, m) => sum + (m.amount || 0), 0),
    shippingFees: membersData.reduce((sum, m) => sum + (m.shippingFee || 0), 0),
    averageAmount: total > 0 ? membersData.reduce((sum, m) => sum + (m.totalAmount || 0), 0) / total : 0
  };

  return {
    total,
    deliveryBreakdown: deliveryStats,
    departmentBreakdown: departmentStats,
    yearBreakdown: yearStats,
    positionBreakdown: positionStats,
    financials
  };
};

/**
 * ‡πÅ‡∏¢‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
 */
const separateMembersByDelivery = (membersData) => {
  const pickup = membersData.filter(m => m.deliveryOption === '‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢');
  const shipping = membersData.filter(m => m.deliveryOption === '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå');

  return {
    pickup: {
      members: pickup,
      count: pickup.length,
      totalRevenue: pickup.reduce((sum, m) => sum + (m.totalAmount || 0), 0),
      averageAmount: pickup.length > 0 ? pickup.reduce((sum, m) => sum + (m.totalAmount || 0), 0) / pickup.length : 0
    },
    shipping: {
      members: shipping,
      count: shipping.length,
      totalRevenue: shipping.reduce((sum, m) => sum + (m.totalAmount || 0), 0),
      averageAmount: shipping.length > 0 ? shipping.reduce((sum, m) => sum + (m.totalAmount || 0), 0) / shipping.length : 0,
      
      // ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
      byShippingStatus: shipping.reduce((acc, m) => {
        acc[m.shippingStatus] = (acc[m.shippingStatus] || 0) + 1;
        return acc;
      }, {})
    }
  };
};

// ===============================================
// üìã EXCEL SHEET CREATORS
// ===============================================

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */
const createAllMembersSheet = (membersData) => {
  const data = [
    // Headers
    [
      '‡∏•‡∏≥‡∏î‡∏±‡∏ö', '‡∏ä‡∏∑‡πà‡∏≠', '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
      '‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á', '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', '‡∏≠‡∏µ‡πÄ‡∏°‡∏•', '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà',
      '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', '‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', '‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°'
    ]
  ];

  // Data rows
  membersData.forEach((member, index) => {
    data.push([
      index + 1,
      member.firstName,
      member.lastName,
      member.department,
      member.graduationYear,
      member.position,
      member.phone,
      member.email,
      member.address,
      member.deliveryOption,
      member.shippingStatus || '‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
      member.amount || 0,
      member.shippingFee || 0,
      member.totalAmount || 0,
      new Date(member.createdAt).toLocaleDateString('th-TH'),
      member.paymentDate ? new Date(member.paymentDate).toLocaleDateString('th-TH') : '-',
      member.trackingNumber || '-'
    ]);
  });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 8 },   // ‡∏•‡∏≥‡∏î‡∏±‡∏ö
    { width: 15 },  // ‡∏ä‡∏∑‡πà‡∏≠
    { width: 20 },  // ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    { width: 25 },  // ‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤
    { width: 12 },  // ‡∏õ‡∏µ
    { width: 15 },  // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    { width: 15 },  // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    { width: 25 },  // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    { width: 40 },  // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
    { width: 20 },  // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
    { width: 15 },  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 10 },  // ‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    { width: 10 },  // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 12 },  // ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    { width: 15 },  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
    { width: 15 },  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
    { width: 15 }   // ‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
 */
const createDeliveryBreakdownSheet = (membersData) => {
  const breakdown = separateMembersByDelivery(membersData);
  
  const data = [
    ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å'],
    [''],
    ['‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°'],
    ['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô', '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°', '‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô'],
    [
      '‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢', 
      breakdown.pickup.count, 
      breakdown.pickup.totalRevenue, 
      Math.round(breakdown.pickup.averageAmount)
    ],
    [
      '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå', 
      breakdown.shipping.count, 
      breakdown.shipping.totalRevenue, 
      Math.round(breakdown.shipping.averageAmount)
    ],
    [''],
    ['‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á'],
    ['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']
  ];

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
  if (breakdown.shipping.count > 0) {
    Object.entries(breakdown.shipping.byShippingStatus).forEach(([status, count]) => {
      const percentage = ((count / breakdown.shipping.count) * 100).toFixed(1);
      data.push([status, count, `${percentage}%`]);
    });
  } else {
    data.push(['‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', 0, '0%']);
  }

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 25 },
    { width: 15 },
    { width: 15 },
    { width: 15 }
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
 */
const createMembersStatisticsSheet = async (membersData) => {
  const stats = await generateAllMembersStatistics(membersData);
  
  const data = [
    ['‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'],
    [''],
    ['‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ß‡∏°'],
    ['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', stats.total],
    ['‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°', stats.financials.totalRevenue],
    ['‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏ß‡∏°', stats.financials.membershipFees],
    ['‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏£‡∏ß‡∏°', stats.financials.shippingFees],
    ['‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô', Math.round(stats.financials.averageAmount)],
    [''],
    ['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö'],
    ['‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']
  ];

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
  Object.entries(stats.deliveryBreakdown).forEach(([delivery, count]) => {
    const percentage = ((count / stats.total) * 100).toFixed(1);
    data.push([delivery, count, `${percentage}%`]);
  });

  data.push(['']);
  data.push(['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤']);
  data.push(['‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å
  Object.entries(stats.departmentBreakdown).forEach(([dept, count]) => {
    const percentage = ((count / stats.total) * 100).toFixed(1);
    data.push([dept, count, `${percentage}%`]);
  });

  data.push(['']);
  data.push(['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á']);
  data.push(['‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  Object.entries(stats.positionBreakdown).forEach(([position, count]) => {
    const percentage = ((count / stats.total) * 100).toFixed(1);
    data.push([position, count, `${percentage}%`]);
  });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 25 },
    { width: 15 },
    { width: 15 }
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô
 */
const createFinancialSummarySheet = (membersData) => {
  const pickup = membersData.filter(m => m.deliveryOption === '‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢');
  const shipping = membersData.filter(m => m.deliveryOption === '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå');

  const data = [
    ['‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏°‡∏≤‡∏Ñ‡∏°‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤'],
    [''],
    ['‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å'],
    ['‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô', '‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å/‡∏Ñ‡∏ô', '‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á/‡∏Ñ‡∏ô', '‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ'],
    [
      '‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢',
      pickup.length,
      200,
      0,
      pickup.reduce((sum, m) => sum + (m.totalAmount || 0), 0)
    ],
    [
      '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå',
      shipping.length,
      200,
      30,
      shipping.reduce((sum, m) => sum + (m.totalAmount || 0), 0)
    ],
    [''],
    ['‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏ß‡∏°'],
    [
      '‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      membersData.length,
      '-',
      '-',
      membersData.reduce((sum, m) => sum + (m.totalAmount || 0), 0)
    ]
  ];

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 20 },
    { width: 12 },
    { width: 15 },
    { width: 15 },
    { width: 15 }
  ];

  return worksheet;
};

export default {
  getAllMembersReportController,
  exportAllMembersToExcelController
};