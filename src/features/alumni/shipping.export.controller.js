// Path: src/features/alumni/shipping.export.controller.js
// ‡πÑ‡∏ü‡∏•‡πå: shipping.export.controller.js - Export Controllers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á

import {
  getShippingList,
  getShippingStatistics,
  trackShipment
} from './shipping.service.js';
import { getAllAlumni } from './alumni.service.js';
import XLSX from 'xlsx';

// ===============================================
// üìä SHIPPING REPORT CONTROLLERS
// ===============================================

/**
 * ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
 * GET /api/shipping/reports/detailed
 */
export const getDetailedShippingReportController = async (req, res) => {
  try {
    const {
      shippingStatus,
      graduationYear,
      department,
      startDate,
      endDate,
      includeStatistics = 'true'
    } = req.query;

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const shippingFilters = {
      shippingStatus,
      graduationYear: graduationYear ? parseInt(graduationYear) : undefined,
      department,
      search: undefined
    };

    const shippingOptions = {
      page: 1,
      limit: 1000, // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      sort: { createdAt: -1 }
    };

    const shippingData = await getShippingList(shippingFilters, shippingOptions);

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    let filteredData = shippingData.data;
    if (startDate || endDate) {
      filteredData = shippingData.data.filter(alumni => {
        const createdDate = new Date(alumni.createdAt);
        const start = startDate ? new Date(startDate) : new Date('1900-01-01');
        const end = endDate ? new Date(endDate) : new Date();
        return createdDate >= start && createdDate <= end;
      });
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    let statistics = null;
    if (includeStatistics === 'true') {
      statistics = await generateShippingReportStatistics(filteredData);
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
    const departmentReport = generateDepartmentShippingReport(filteredData);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    const statusReport = generateStatusShippingReport(filteredData);

    return res.status(200).json({
      success: true,
      message: '‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      data: {
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        shipments: filteredData,
        totalShipments: filteredData.length,
        
        // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°
        statistics,
        
        // ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
        reports: {
          byDepartment: departmentReport,
          byStatus: statusReport
        },
        
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
        filters: {
          shippingStatus,
          graduationYear,
          department,
          startDate,
          endDate
        },
        
        // ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
        generatedAt: new Date()
      }
    });
  } catch (error) {
    console.error('Error in getDetailedShippingReport:', error);
    return res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
      error: error.message
    });
  }
};

// ===============================================
// üì§ EXPORT EXCEL CONTROLLERS
// ===============================================

/**
 * Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô Excel
 * GET /api/shipping/export/excel
 */
export const exportShippingToExcelController = async (req, res) => {
  try {
    const {
      shippingStatus,
      graduationYear,
      department,
      startDate,
      endDate,
      includeStatistics = 'true',
      fileName
    } = req.query;

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö detailed report
    const filters = {
      shippingStatus,
      graduationYear: graduationYear ? parseInt(graduationYear) : undefined,
      department
    };

    const options = {
      page: 1,
      limit: 1000,
      sort: { createdAt: -1 }
    };

    const shippingData = await getShippingList(filters, options);

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    let filteredData = shippingData.data;
    if (startDate || endDate) {
      filteredData = shippingData.data.filter(alumni => {
        const createdDate = new Date(alumni.createdAt);
        const start = startDate ? new Date(startDate) : new Date('1900-01-01');
        const end = endDate ? new Date(endDate) : new Date();
        return createdDate >= start && createdDate <= end;
      });
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Excel Workbook
    const workbook = XLSX.utils.book_new();

    // Sheet 1: ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const shippingSheet = createShippingListSheet(filteredData);
    XLSX.utils.book_append_sheet(workbook, shippingSheet, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á');

    // Sheet 2: ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
    if (includeStatistics === 'true') {
      const statisticsSheet = await createShippingStatisticsSheet(filteredData);
      XLSX.utils.book_append_sheet(workbook, statisticsSheet, '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á');
    }

    // Sheet 3: ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
    const departmentSheet = createDepartmentReportSheet(filteredData);
    XLSX.utils.book_append_sheet(workbook, departmentSheet, '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel
    const excelBuffer = XLSX.write(workbook, { 
      type: 'buffer', 
      bookType: 'xlsx' 
    });

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    const defaultFileName = `shipping-report-${new Date().toISOString().split('T')[0]}.xlsx`;
    const downloadFileName = fileName || defaultFileName;

    // ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏±‡∏ö
    res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    res.setHeader('Content-Disposition', `attachment; filename="${downloadFileName}"`);
    res.setHeader('Content-Length', excelBuffer.length);

    return res.send(excelBuffer);

  } catch (error) {
    console.error('Error in exportShippingToExcel:', error);
    return res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Export Excel',
      error: error.message
    });
  }
};

/**
 * Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Excel
 * GET /api/alumni/export/excel
 */
export const exportAlumniToExcelController = async (req, res) => {
  try {
    const {
      status,
      position,
      graduationYear,
      department,
      search,
      name,
      idCard,
      shippingStatus,
      deliveryOption,
      fileName
    } = req.query;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á filters
    const filters = {};
    if (status) filters.status = status;
    if (position) filters.position = position;
    if (graduationYear) filters.graduationYear = parseInt(graduationYear);
    if (department) filters.department = department;
    if (shippingStatus) filters.shippingStatus = shippingStatus;
    if (deliveryOption) filters.deliveryOption = deliveryOption;
    
    const searchTerm = search || name;
    if (searchTerm && searchTerm.trim()) {
      filters.name = searchTerm.trim();
    }
    
    if (idCard && idCard.trim()) {
      filters.idCard = idCard.trim();
    }

    const options = {
      page: 1,
      limit: 10000, // ‡∏î‡∏∂‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      sort: { createdAt: -1 }
    };

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤
    const results = await getAllAlumni(filters, options);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Excel Workbook
    const workbook = XLSX.utils.book_new();

    // Sheet 1: ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤
    const alumniSheet = createAlumniListSheet(results.data);
    XLSX.utils.book_append_sheet(workbook, alumniSheet, '‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤');

    // Sheet 2: ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤
    const statisticsSheet = createAlumniStatisticsSheet(results.data);
    XLSX.utils.book_append_sheet(workbook, statisticsSheet, '‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel
    const excelBuffer = XLSX.write(workbook, { 
      type: 'buffer', 
      bookType: 'xlsx' 
    });

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    const defaultFileName = `alumni-data-${new Date().toISOString().split('T')[0]}.xlsx`;
    const downloadFileName = fileName || defaultFileName;

    // ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏Å‡∏•‡∏±‡∏ö
    res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    res.setHeader('Content-Disposition', `attachment; filename="${downloadFileName}"`);
    res.setHeader('Content-Length', excelBuffer.length);

    return res.send(excelBuffer);

  } catch (error) {
    console.error('Error in exportAlumniToExcel:', error);
    return res.status(500).json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤',
      error: error.message
    });
  }
};

// ===============================================
// üìä HELPER FUNCTIONS
// ===============================================

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
 */
const generateShippingReportStatistics = async (shippingData) => {
  const total = shippingData.length;
  
  // ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const statusCounts = shippingData.reduce((acc, item) => {
    acc[item.shippingStatus] = (acc[item.shippingStatus] || 0) + 1;
    return acc;
  }, {});

  // ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
  const departmentCounts = shippingData.reduce((acc, item) => {
    acc[item.department] = (acc[item.department] || 0) + 1;
    return acc;
  }, {});

  // ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏µ
  const yearCounts = shippingData.reduce((acc, item) => {
    acc[item.graduationYear] = (acc[item.graduationYear] || 0) + 1;
    return acc;
  }, {});

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°
  const totalAmount = shippingData.reduce((sum, item) => sum + (item.totalAmount || 0), 0);
  const totalShippingFee = shippingData.reduce((sum, item) => sum + (item.shippingFee || 0), 0);

  return {
    total,
    statusBreakdown: statusCounts,
    departmentBreakdown: departmentCounts,
    yearBreakdown: yearCounts,
    financials: {
      totalAmount,
      totalShippingFee,
      averageAmount: total > 0 ? totalAmount / total : 0
    }
  };
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
 */
const generateDepartmentShippingReport = (shippingData) => {
  const departments = {};
  
  shippingData.forEach(item => {
    if (!departments[item.department]) {
      departments[item.department] = {
        department: item.department,
        total: 0,
        byStatus: {},
        totalAmount: 0
      };
    }
    
    departments[item.department].total++;
    departments[item.department].byStatus[item.shippingStatus] = 
      (departments[item.department].byStatus[item.shippingStatus] || 0) + 1;
    departments[item.department].totalAmount += (item.totalAmount || 0);
  });
  
  return Object.values(departments);
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
 */
const generateStatusShippingReport = (shippingData) => {
  const statuses = {};
  
  shippingData.forEach(item => {
    if (!statuses[item.shippingStatus]) {
      statuses[item.shippingStatus] = {
        status: item.shippingStatus,
        total: 0,
        departments: {},
        totalAmount: 0
      };
    }
    
    statuses[item.shippingStatus].total++;
    statuses[item.shippingStatus].departments[item.department] = 
      (statuses[item.shippingStatus].departments[item.department] || 0) + 1;
    statuses[item.shippingStatus].totalAmount += (item.totalAmount || 0);
  });
  
  return Object.values(statuses);
};

// ===============================================
// üìã EXCEL SHEET CREATORS
// ===============================================

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
 */
const createShippingListSheet = (shippingData) => {
  const data = [
    // Headers
    [
      '‡∏•‡∏≥‡∏î‡∏±‡∏ö', '‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
      '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°',
      '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', '‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'
    ]
  ];

  // Data rows
  shippingData.forEach((item, index) => {
    data.push([
      index + 1,
      `${item.firstName} ${item.lastName}`,
      item.department,
      item.graduationYear,
      item.phone,
      item.address,
      item.shippingStatus,
      item.trackingNumber || '-',
      item.shippedDate ? new Date(item.shippedDate).toLocaleDateString('th-TH') : '-',
      item.amount || 0,
      item.shippingFee || 0,
      item.totalAmount || 0,
      new Date(item.createdAt).toLocaleDateString('th-TH'),
      item.deliveryNotes || '-'
    ]);
  });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 8 },   // ‡∏•‡∏≥‡∏î‡∏±‡∏ö
    { width: 25 },  // ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    { width: 20 },  // ‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤
    { width: 12 },  // ‡∏õ‡∏µ
    { width: 15 },  // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    { width: 40 },  // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
    { width: 15 },  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 15 },  // ‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°
    { width: 12 },  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 10 },  // ‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    { width: 10 },  // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 12 },  // ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    { width: 15 },  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
    { width: 20 }   // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
 */
const createShippingStatisticsSheet = async (shippingData) => {
  const stats = await generateShippingReportStatistics(shippingData);
  
  const data = [
    ['‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤'],
    [''],
    ['‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ß‡∏°'],
    ['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', stats.total],
    ['‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏£‡∏ß‡∏°', stats.financials.totalAmount],
    ['‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏£‡∏ß‡∏°', stats.financials.totalShippingFee],
    ['‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏Ñ‡∏ô', Math.round(stats.financials.averageAmount)],
    [''],
    ['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á'],
    ['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']
  ];

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  Object.entries(stats.statusBreakdown).forEach(([status, count]) => {
    const percentage = ((count / stats.total) * 100).toFixed(1);
    data.push([status, count, `${percentage}%`]);
  });

  data.push(['']);
  data.push(['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤']);
  data.push(['‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å
  Object.entries(stats.departmentBreakdown).forEach(([dept, count]) => {
    const percentage = ((count / stats.total) * 100).toFixed(1);
    data.push([dept, count, `${percentage}%`]);
  });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 25 },
    { width: 15 },
    { width: 15 }
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
 */
const createDepartmentReportSheet = (shippingData) => {
  const departmentReport = generateDepartmentShippingReport(shippingData);
  
  const data = [
    ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤'],
    [''],
    [
      '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', 
      '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß', '‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏£‡∏ß‡∏°'
    ]
  ];

  departmentReport.forEach(dept => {
    data.push([
      dept.department,
      dept.total,
      dept.byStatus['‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á'] || 0,
      dept.byStatus['‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á'] || 0,
      dept.byStatus['‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß'] || 0,
      dept.byStatus['‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á'] || 0,
      dept.totalAmount
    ]);
  });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 25 }, // ‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤
    { width: 12 }, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    { width: 12 }, // ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 12 }, // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 12 }, // ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß
    { width: 12 }, // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 12 }  // ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏£‡∏ß‡∏°
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤
 */
const createAlumniListSheet = (alumniData) => {
  const data = [
    // Headers
    [
      '‡∏•‡∏≥‡∏î‡∏±‡∏ö', '‡∏ä‡∏∑‡πà‡∏≠', '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', '‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô', '‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤',
      '‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤', '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', '‡∏≠‡∏µ‡πÄ‡∏°‡∏•', '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà',
      '‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö',
      '‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å', '‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô',
      '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', '‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°'
    ]
  ];

  // Data rows
  alumniData.forEach((item, index) => {
    data.push([
      index + 1,
      item.firstName,
      item.lastName,
      item.idCard,
      item.department,
      item.graduationYear,
      item.phone,
      item.email,
      item.address,
      item.position,
      item.status,
      item.shippingStatus,
      item.deliveryOption,
      item.amount || 0,
      item.shippingFee || 0,
      item.totalAmount || 0,
      new Date(item.createdAt).toLocaleDateString('th-TH'),
      item.paymentDate ? new Date(item.paymentDate).toLocaleDateString('th-TH') : '-',
      item.trackingNumber || '-'
    ]);
  });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 8 },   // ‡∏•‡∏≥‡∏î‡∏±‡∏ö
    { width: 15 },  // ‡∏ä‡∏∑‡πà‡∏≠
    { width: 20 },  // ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
    { width: 18 },  // ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô
    { width: 20 },  // ‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤
    { width: 12 },  // ‡∏õ‡∏µ
    { width: 15 },  // ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
    { width: 25 },  // ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    { width: 40 },  // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà
    { width: 15 },  // ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    { width: 12 },  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    { width: 15 },  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 15 },  // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
    { width: 10 },  // ‡∏Ñ‡πà‡∏≤‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    { width: 10 },  // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á
    { width: 12 },  // ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    { width: 15 },  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
    { width: 15 },  // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
    { width: 15 }   // ‡πÄ‡∏•‡∏Ç‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°
  ];

  return worksheet;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Sheet ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤
 */
const createAlumniStatisticsSheet = (alumniData) => {
  const total = alumniData.length;
  
  // ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const statusCounts = alumniData.reduce((acc, item) => {
    acc[item.status] = (acc[item.status] || 0) + 1;
    return acc;
  }, {});

  // ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å
  const departmentCounts = alumniData.reduce((acc, item) => {
    acc[item.department] = (acc[item.department] || 0) + 1;
    return acc;
  }, {});

  // ‡∏ô‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏µ
  const yearCounts = alumniData.reduce((acc, item) => {
    acc[item.graduationYear] = (acc[item.graduationYear] || 0) + 1;
    return acc;
  }, {});

  const data = [
    ['‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏®‡∏¥‡∏©‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤'],
    [''],
    ['‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ß‡∏°'],
    ['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', total],
    [''],
    ['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'],
    ['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']
  ];

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  Object.entries(statusCounts).forEach(([status, count]) => {
    const percentage = ((count / total) * 100).toFixed(1);
    data.push([status, count, `${percentage}%`]);
  });

  data.push(['']);
  data.push(['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤']);
  data.push(['‡πÅ‡∏ú‡∏ô‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å
  Object.entries(departmentCounts).forEach(([dept, count]) => {
    const percentage = ((count / total) * 100).toFixed(1);
    data.push([dept, count, `${percentage}%`]);
  });

  data.push(['']);
  data.push(['‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤']);
  data.push(['‡∏õ‡∏µ', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô', '‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå']);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏µ
  Object.entries(yearCounts)
    .sort(([a], [b]) => b - a) // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏õ‡∏µ‡∏à‡∏≤‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤
    .forEach(([year, count]) => {
      const percentage = ((count / total) * 100).toFixed(1);
      data.push([year, count, `${percentage}%`]);
    });

  const worksheet = XLSX.utils.aoa_to_sheet(data);
  
  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
  worksheet['!cols'] = [
    { width: 25 },
    { width: 15 },
    { width: 15 }
  ];

  return worksheet;
};

export default {
  getDetailedShippingReportController,
  exportShippingToExcelController,
  exportAlumniToExcelController
};