// Path: src/features/alumni/shipping.routes.js
// р╣Др╕Яр╕ер╣М: shipping.routes.js - р╣Ар╕Юр╕┤р╣Ир╕б Routes р╕кр╕│р╕лр╕гр╕▒р╕Ъ Reports р╣Бр╕ер╕░ Export

import express from 'express';
import {
  // Label Generation Controllers
  generateSingleLabelController,
  generateBulkLabelsController,
  generateShippingSummaryController,
  generateMinimalLabelController,
  generate4UpLabelsController,
  
  // Utilities
  checkOverdueShipmentsController,
  getShippingReportsController
} from './shipping.controller.js';

// ЁЯЪА Import Export Controllers (р╕Чр╕╡р╣Ир╕Вр╕▓р╕Фр╕лр╕▓р╕вр╣Др╕Ы)
import {
  getDetailedShippingReportController,
  exportShippingToExcelController
} from './shipping.export.controller.js';

import { authMiddleware, adminMiddleware } from '../../middlewares/auth.middleware.js';

const router = express.Router();

// ============================================
// ЁЯУК SHIPPING REPORTS ROUTES (ЁЯЪА р╣Ар╕Юр╕┤р╣Ир╕бр╣Гр╕лр╕бр╣И)
// ============================================

/**
 * р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕Ър╕Ър╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф
 * GET /api/shipping/reports/detailed?shippingStatus=р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З&department=р╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡р╕кр╕▓р╕гр╕кр╕Щр╣Ар╕Чр╕и
 */
router.get('/reports/detailed', authMiddleware, adminMiddleware, getDetailedShippingReportController);

/**
 * р╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З (р╕вр╣Ир╕н)
 * GET /api/shipping/reports/summary
 */
router.get('/reports/summary', authMiddleware, adminMiddleware, async (req, res) => {
  try {
    const { getShippingStatistics } = await import('./shipping.service.js');
    const statistics = await getShippingStatistics();
    
    return res.status(200).json({
      success: true,
      message: 'р╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕кр╕│р╣Ар╕гр╣Зр╕И',
      data: statistics
    });
  } catch (error) {
    console.error('Error in shipping summary:', error);
    return res.status(500).json({
      success: false,
      message: 'р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
      error: error.message
    });
  }
});

// ============================================
// ЁЯУд SHIPPING EXPORT ROUTES (ЁЯЪА р╣Ар╕Юр╕┤р╣Ир╕бр╣Гр╕лр╕бр╣И)
// ============================================

/**
 * Export р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Ар╕Ыр╣Зр╕Щ Excel
 * GET /api/shipping/export/excel?shippingStatus=р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З&fileName=shipping-report.xlsx
 */
router.get('/export/excel', authMiddleware, adminMiddleware, exportShippingToExcelController);

/**
 * Export р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З (р╣Ар╕Йр╕Юр╕▓р╕░р╕Др╕Щр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Бр╕Ир╕▒р╕Фр╕кр╣Ир╕З)
 * GET /api/shipping/export/shipping-list?fileName=shipping-list.xlsx
 */
router.get('/export/shipping-list', authMiddleware, adminMiddleware, async (req, res) => {
  try {
    const { fileName } = req.query;
    const { getShippingList } = await import('./shipping.service.js');
    
    // р╕Фр╕╢р╕Зр╣Ар╕Йр╕Юр╕▓р╕░р╕Др╕Щр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З
    const filters = {
      shippingStatus: 'р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З' // р╕лр╕гр╕╖р╕нр╕Чр╕╕р╕Бр╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
    };
    
    const options = {
      page: 1,
      limit: 10000,
      sort: { createdAt: -1 }
    };
    
    const results = await getShippingList(filters, options);
    
    // р╕кр╕гр╣Йр╕▓р╕З Excel (р╣Гр╕Кр╣Йр╣Вр╕Др╣Йр╕Фр╕Ир╕▓р╕Б shipping.export.controller.js)
    const XLSX = (await import('xlsx')).default;
    const workbook = XLSX.utils.book_new();
    
    // Sheet: р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З
    const data = [
      [
        'р╕ер╕│р╕Фр╕▒р╕Ъ', 'р╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е', 'р╣Бр╕Ьр╕Щр╕Бр╕зр╕┤р╕Кр╕▓', 'р╕Ыр╕╡р╕Чр╕╡р╣Ир╕кр╕│р╣Ар╕гр╣Зр╕Ир╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓',
        'р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕ир╕▒р╕Юр╕Чр╣М', 'р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И', 'р╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З', 'р╣Ар╕ер╕Вр╕Хр╕┤р╕Фр╕Хр╕▓р╕б',
        'р╕Др╣Ир╕▓р╕кр╕бр╕▓р╕Кр╕┤р╕Б', 'р╕Др╣Ир╕▓р╕Ир╕▒р╕Фр╕кр╣Ир╕З', 'р╕гр╕зр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф', 'р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ'
      ]
    ];
    
    results.data.forEach((item, index) => {
      data.push([
        index + 1,
        `${item.firstName} ${item.lastName}`,
        item.department,
        item.graduationYear,
        item.phone,
        item.address,
        item.shippingStatus,
        item.trackingNumber || '-',
        item.amount || 200,
        item.shippingFee || 30,
        item.totalAmount || 230,
        new Date(item.createdAt).toLocaleDateString('th-TH')
      ]);
    });
    
    const worksheet = XLSX.utils.aoa_to_sheet(data);
    worksheet['!cols'] = [
      { width: 8 }, { width: 25 }, { width: 20 }, { width: 12 },
      { width: 15 }, { width: 40 }, { width: 15 }, { width: 15 },
      { width: 10 }, { width: 10 }, { width: 12 }, { width: 15 }
    ];
    
    XLSX.utils.book_append_sheet(workbook, worksheet, 'р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З');
    
    const excelBuffer = XLSX.write(workbook, { type: 'buffer', bookType: 'xlsx' });
    const downloadFileName = fileName || `shipping-list-${new Date().toISOString().split('T')[0]}.xlsx`;
    
    res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    res.setHeader('Content-Disposition', `attachment; filename="${downloadFileName}"`);
    res.setHeader('Content-Length', excelBuffer.length);
    
    return res.send(excelBuffer);
    
  } catch (error) {
    console.error('Error in export shipping list:', error);
    return res.status(500).json({
      success: false,
      message: 'р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕г Export р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
      error: error.message
    });
  }
});

// ============================================
// ЁЯП╖я╕П MINIMAL LABEL GENERATION ROUTES
// ============================================

/**
 * р╕кр╕гр╣Йр╕▓р╕З minimal shipping label р╕гр╕▓р╕вр╕Ър╕╕р╕Др╕Др╕е
 * GET /api/shipping/labels/minimal/:id?format=html
 */
router.get('/labels/minimal/:id', authMiddleware, adminMiddleware, generateMinimalLabelController);

/**
 * р╕кр╕гр╣Йр╕▓р╕З 4 minimal labels р╣Гр╕Щ A4 р╣Ар╕Фр╕╡р╕вр╕з
 * POST /api/shipping/labels/4up
 */
router.post('/labels/4up', authMiddleware, adminMiddleware, generate4UpLabelsController);

// ============================================
// ЁЯП╖я╕П ORIGINAL LABEL GENERATION ROUTES 
// ============================================

/**
 * р╕кр╕гр╣Йр╕▓р╕З shipping label р╕гр╕▓р╕вр╕Ър╕╕р╕Др╕Др╕е (р╣Ар╕зр╕нр╕гр╣Мр╕Кр╕▒р╕Щр╣Ар╕Хр╣Зр╕б)
 * GET /api/shipping/labels/single/:id?format=html&includeQR=false
 */
router.get('/labels/single/:id', authMiddleware, adminMiddleware, generateSingleLabelController);

/**
 * р╕кр╕гр╣Йр╕▓р╕З bulk shipping labels (р╣Ар╕зр╕нр╕гр╣Мр╕Кр╕▒р╕Щр╣Ар╕Хр╣Зр╕б)
 * POST /api/shipping/labels/bulk
 */
router.post('/labels/bulk', authMiddleware, adminMiddleware, generateBulkLabelsController);

/**
 * р╕кр╕гр╣Йр╕▓р╕З shipping summary report
 * POST /api/shipping/summary
 */
router.post('/summary', authMiddleware, adminMiddleware, generateShippingSummaryController);

// ============================================
// ЁЯФз SHIPPING UTILITIES (Admin Only)
// ============================================

/**
 * р╣Ар╕Кр╣Зр╕Др╣Бр╕ер╕░р╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕╡р╣Ир╕Др╣Йр╕▓р╕Зр╕Щр╕▓р╕Щ
 * GET /api/shipping/overdue?days=7
 */
router.get('/overdue', authMiddleware, adminMiddleware, checkOverdueShipmentsController);

/**
 * р╕Фр╕╢р╕Зр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З (General)
 * GET /api/shipping/reports?period=weekly&startDate=&endDate=
 */
router.get('/reports', authMiddleware, adminMiddleware, getShippingReportsController);

// ============================================
// ЁЯФН TESTING & INFO ROUTES
// ============================================

/**
 * р╕Чр╕Фр╕кр╕нр╕Ъ API
 * GET /api/shipping/test
 */
router.get('/test', (req, res) => {
  res.status(200).json({
    success: true,
    message: 'Shipping API is working! ЁЯЪЪ',
    timestamp: new Date(),
    availableRoutes: {
      // ЁЯЪА Reports & Export (NEW)
      reportsAndExport: [
        'GET /api/shipping/reports/detailed',     // р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕Ър╕Ър╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф
        'GET /api/shipping/reports/summary',      // р╕кр╕гр╕╕р╕Ыр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
        'GET /api/shipping/export/excel',         // Export р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
        'GET /api/shipping/export/shipping-list'  // Export р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З
      ],
      
      // Label Generation
      labelGeneration: [
        'GET /api/shipping/labels/minimal/:id',
        'POST /api/shipping/labels/4up',
        'GET /api/shipping/labels/single/:id',
        'POST /api/shipping/labels/bulk',
        'POST /api/shipping/summary'
      ],
      
      // Utilities
      utilities: [
        'GET /api/shipping/overdue',
        'GET /api/shipping/reports'
      ]
    }
  });
});

/**
 * ЁЯОп API Usage Examples
 * GET /api/shipping/examples
 */
router.get('/examples', (req, res) => {
  res.status(200).json({
    success: true,
    message: 'Shipping API Usage Examples ЁЯУЛ',
    
    // ЁЯУК р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З
    shippingReports: {
      title: 'ЁЯУК р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
      examples: [
        {
          description: 'р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Др╕Щр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
          url: '/api/shipping/reports/detailed?shippingStatus=р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
          note: 'р╣Ар╕Йр╕Юр╕▓р╕░р╕Др╕Щр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б "р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕▓р╕Зр╣Др╕Ыр╕гр╕йр╕Ур╕╡р╕вр╣М" р╣Бр╕ер╕░р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Ир╕▒р╕Фр╕кр╣Ир╕З'
        },
        {
          description: 'р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Др╕Щр╕Чр╕╡р╣Ир╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з',
          url: '/api/shipping/reports/detailed?shippingStatus=р╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Бр╕ер╣Йр╕з',
          note: 'р╕Др╕Щр╕Чр╕╡р╣Ир╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕ер╣Йр╕з'
        },
        {
          description: 'р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Хр╕▓р╕бр╣Бр╕Ьр╕Щр╕Бр╕зр╕┤р╕Кр╕▓',
          url: '/api/shipping/reports/detailed?department=р╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡р╕кр╕▓р╕гр╕кр╕Щр╣Ар╕Чр╕и',
          note: 'р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Вр╕нр╕Зр╣Бр╕Ьр╕Щр╕Бр╣Ар╕Йр╕Юр╕▓р╕░'
        }
      ]
    },
    
    // ЁЯУд Export Excel
    excelExports: {
      title: 'ЁЯУд Export р╣Ар╕Ыр╣Зр╕Щ Excel',
      examples: [
        {
          description: 'Export р╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
          url: '/api/shipping/export/shipping-list?fileName=р╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕З.xlsx',
          note: 'р╣Ар╕Йр╕Юр╕▓р╕░р╕Др╕Щр╕Чр╕╡р╣Ир╕вр╕▒р╕Зр╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З'
        },
        {
          description: 'Export р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф',
          url: '/api/shipping/export/excel?fileName=р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З.xlsx',
          note: '3 Sheets: р╕гр╕▓р╕вр╕Бр╕▓р╕г + р╕кр╕Цр╕┤р╕Хр╕┤ + р╣Бр╕вр╕Бр╕Хр╕▓р╕бр╣Бр╕Ьр╕Щр╕Б'
        }
      ]
    },
    
    // ЁЯОп Business Cases
    businessCases: {
      title: 'ЁЯОп р╕Бр╕гр╕Ур╕╡р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ',
      cases: [
        {
          case: 'р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕гр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╕Др╕Щр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Юр╕▒р╕кр╕Фр╕╕',
          solution: 'GET /api/shipping/reports/detailed?shippingStatus=р╕гр╕нр╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕З',
          export: 'GET /api/shipping/export/shipping-list'
        },
        {
          case: 'р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Фр╕╣р╕кр╕Цр╕┤р╕Хр╕┤р╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕кр╣Ир╕Зр╕Вр╕нр╕Зр╣Бр╕Хр╣Ир╕ер╕░р╣Бр╕Ьр╕Щр╕Б',
          solution: 'GET /api/shipping/reports/detailed (р╕Фр╕╣ departmentShipping)',
          export: 'GET /api/shipping/export/excel'
        },
        {
          case: 'р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф (р╕Чр╕▒р╣Йр╕Зр╕гр╕▒р╕Ър╣Ар╕нр╕З + р╕Ир╕▒р╕Фр╕кр╣Ир╕З)',
          solution: 'GET /api/alumni/reports/all-members',
          export: 'GET /api/alumni/export/all-members-excel'
        }
      ]
    }
  });
});

export default router;